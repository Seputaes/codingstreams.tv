plugins {
    id 'java'

    id 'checkstyle'
    id 'com.github.spotbugs' version '3.0.0'
    id 'jacoco'
}

repositories {
    jcenter()
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    // Core dependencies
    implementation 'com.github.seputaes:avenue:master-SNAPSHOT'

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

// configure compiler options
// unchecked and deprecation should produce warnings
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

// configure checkstyle
checkstyle {
    ignoreFailures false
    configFile file("${projectDir}/configuration/checkstyle/checkstyle.xml")
    configDirectory.set(file("${projectDir}/configuration/checkstyle"))
    toolVersion "8.30"
}

// configure spotbugs
spotbugs {
    ignoreFailures false
    toolVersion "4.0.0"
}
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}

// configure jacoco
jacocoTestReport {
    reports {
        html.enabled = false
        html.destination = file("${buildDir}/reports/jacoco/html")
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0 // TODO
            }
        }
    }
}
jacocoTestReport.dependsOn test
check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
}
